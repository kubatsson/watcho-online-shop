// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using e_comm.DB.EF;

namespace e_comm.Migrations
{
    [DbContext(typeof(DBcon))]
    partial class DBconModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("e_comm.DB.Domain.BillingDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BillingDetails");
                });

            modelBuilder.Entity("e_comm.DB.Domain.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("ImageRoute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Ade Kaye",
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 186, DateTimeKind.Utc).AddTicks(6433),
                            GenderId = 2,
                            ImageRoute = "../images/HomePage/adekayee.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 186, DateTimeKind.Utc).AddTicks(6433)
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Bedat",
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 186, DateTimeKind.Utc).AddTicks(9755),
                            GenderId = 2,
                            ImageRoute = "../images/HomePage/bedat.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 186, DateTimeKind.Utc).AddTicks(9755)
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Bertha",
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 186, DateTimeKind.Utc).AddTicks(9826),
                            GenderId = 2,
                            ImageRoute = "../images/HomePage/bertha.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 186, DateTimeKind.Utc).AddTicks(9826)
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Eterna",
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 186, DateTimeKind.Utc).AddTicks(9827),
                            GenderId = 2,
                            ImageRoute = "../images/HomePage/eterna.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 186, DateTimeKind.Utc).AddTicks(9827)
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Casio",
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 186, DateTimeKind.Utc).AddTicks(9829),
                            GenderId = 1,
                            ImageRoute = "../images/HomePage/casio.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 186, DateTimeKind.Utc).AddTicks(9829)
                        },
                        new
                        {
                            Id = 6,
                            CategoryName = "Rolex",
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 186, DateTimeKind.Utc).AddTicks(9830),
                            GenderId = 1,
                            ImageRoute = "../images/HomePage/rolex.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 186, DateTimeKind.Utc).AddTicks(9830)
                        },
                        new
                        {
                            Id = 7,
                            CategoryName = "Omega",
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 186, DateTimeKind.Utc).AddTicks(9831),
                            GenderId = 1,
                            ImageRoute = "../images/HomePage/omega.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 186, DateTimeKind.Utc).AddTicks(9831)
                        },
                        new
                        {
                            Id = 8,
                            CategoryName = "Certina",
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 186, DateTimeKind.Utc).AddTicks(9833),
                            GenderId = 1,
                            ImageRoute = "../images/HomePage/certina.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 186, DateTimeKind.Utc).AddTicks(9833)
                        });
                });

            modelBuilder.Entity("e_comm.DB.Domain.ChangePasswordCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChangePasswords");
                });

            modelBuilder.Entity("e_comm.DB.Domain.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 189, DateTimeKind.Utc).AddTicks(8994),
                            GenderName = "Male",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 189, DateTimeKind.Utc).AddTicks(8994)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 189, DateTimeKind.Utc).AddTicks(9530),
                            GenderName = "Female",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 189, DateTimeKind.Utc).AddTicks(9530)
                        });
                });

            modelBuilder.Entity("e_comm.DB.Domain.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("e_comm.DB.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("ImageRoute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("GenderId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(5910),
                            GenderId = 1,
                            ImageRoute = "../images/HomePage/certina-m/certina1.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(5910),
                            Price = 299.99000000000001,
                            ProductName = "Certina",
                            ShortDescription = " DS Podium Automatic Grey Dial Men's Watch"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(8942),
                            GenderId = 1,
                            ImageRoute = "../images/HomePage/certina-m/certina2.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(8942),
                            Price = 220.99000000000001,
                            ProductName = "Certina",
                            ShortDescription = "DS First Ceramic Black Leather Men's Watch"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(8989),
                            GenderId = 1,
                            ImageRoute = "../images/HomePage/certina-m/certina3.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(8989),
                            Price = 529.99000000000001,
                            ProductName = "Certina",
                            ShortDescription = "DS-1 Big Date Automatic Men's Watch"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(8991),
                            GenderId = 1,
                            ImageRoute = "../images/HomePage/certina-m/certina4.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(8991),
                            Price = 189.99000000000001,
                            ProductName = "Certina",
                            ShortDescription = "DS Blue Ribbon Quartz Black"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(8993),
                            GenderId = 1,
                            ImageRoute = "../images/HomePage/omega-m/omega1.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(8993),
                            Price = 3949.9899999999998,
                            ProductName = "Omega",
                            ShortDescription = "Seamaster Automatic Blue Dial Men's Watch"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9069),
                            GenderId = 1,
                            ImageRoute = "../images/HomePage/omega-m/omega2.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9069),
                            Price = 3919.9899999999998,
                            ProductName = "Omega",
                            ShortDescription = "Seamaster Automatic Grey Dial Men's Watch"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9071),
                            GenderId = 1,
                            ImageRoute = "../images/HomePage/omega-m/omega3.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9071),
                            Price = 4099.9899999999998,
                            ProductName = "Omega",
                            ShortDescription = "Seamaster Automatic Grey Dial Men's Watch"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9072),
                            GenderId = 1,
                            ImageRoute = "../images/HomePage/omega-m/omega4.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9072),
                            Price = 5594.9899999999998,
                            ProductName = "Omega",
                            ShortDescription = "Seamaster Automatic Chronometer Men's"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9073),
                            GenderId = 1,
                            ImageRoute = "../images/HomePage/rolex-m/rolex1.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9073),
                            Price = 8849.9899999999998,
                            ProductName = "Rolex",
                            ShortDescription = "Air King Black Dial Stainless Steel Men's"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9075),
                            GenderId = 1,
                            ImageRoute = "../images/HomePage/rolex-m/rolex2.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9075),
                            Price = 14324.99,
                            ProductName = "Rolex",
                            ShortDescription = "Oyster Perpetual Submariner Black Dial "
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9076),
                            GenderId = 1,
                            ImageRoute = "../images/HomePage/rolex-m/rolex3.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9076),
                            Price = 20149.990000000002,
                            ProductName = "Rolex",
                            ShortDescription = "Submariner Kermit Automatic Chronometer "
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9077),
                            GenderId = 1,
                            ImageRoute = "../images/HomePage/rolex-m/rolex4.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9077),
                            Price = 7194.9899999999998,
                            ProductName = "Rolex",
                            ShortDescription = "Pre-owned Datejust 36 Automatic Diamond"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9078),
                            GenderId = 1,
                            ImageRoute = "../images/HomePage/casio-m/casio1.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9078),
                            Price = 178.99000000000001,
                            ProductName = "Casio",
                            ShortDescription = "G-Shock Men's Analog-Digital Watch"
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9079),
                            GenderId = 1,
                            ImageRoute = "../images/HomePage/casio-m/casio2.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9079),
                            Price = 124.98999999999999,
                            ProductName = "Casio",
                            ShortDescription = "G Shock Analog-Digital Dial Black "
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9081),
                            GenderId = 1,
                            ImageRoute = "../images/HomePage/casio-m/casio3.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9081),
                            Price = 74.989999999999995,
                            ProductName = "Casio",
                            ShortDescription = "G Shock Grey Digital Dial Resin "
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9082),
                            GenderId = 1,
                            ImageRoute = "../images/HomePage/casio-m/casio4.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9082),
                            Price = 59.990000000000002,
                            ProductName = "Casio",
                            ShortDescription = "G-Shock Military Men's Watch"
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9083),
                            GenderId = 2,
                            ImageRoute = "../images/HomePage/adee kaye-f/ak-1.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9083),
                            Price = 85.989999999999995,
                            ProductName = "Adee Kaye",
                            ShortDescription = "Exotic Snowflake Dial Ladies Watc"
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9084),
                            GenderId = 2,
                            ImageRoute = "../images/HomePage/adee kaye-f/ak-2.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9084),
                            Price = 111.98999999999999,
                            ProductName = "Adee Kaye",
                            ShortDescription = "Yahtch II Blue Dia Ladies Chronograph Watch"
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9086),
                            GenderId = 2,
                            ImageRoute = "../images/HomePage/adee kaye-f/ak-3.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9086),
                            Price = 85.989999999999995,
                            ProductName = "Adee Kaye",
                            ShortDescription = "Beverly Hills Exotic Ladies Leather Watch"
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9087),
                            GenderId = 2,
                            ImageRoute = "../images/HomePage/adee kaye-f/ak-4.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9087),
                            Price = 85.989999999999995,
                            ProductName = "Adee Kaye",
                            ShortDescription = "Brown Dial Ladies Crystal Watch"
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9088),
                            GenderId = 2,
                            ImageRoute = "../images/HomePage/bedat-f/bedat1.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9088),
                            Price = 5674.9899999999998,
                            ProductName = "Bedat",
                            ShortDescription = "No. 3 Diamond Steel Ladies Watch"
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9089),
                            GenderId = 2,
                            ImageRoute = "../images/HomePage/bedat-f/bedat2.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9089),
                            Price = 4619.9899999999998,
                            ProductName = "Bedat",
                            ShortDescription = "No 2 Mother of Pearl Diamond Stainless "
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9090),
                            GenderId = 2,
                            ImageRoute = "../images/HomePage/bedat-f/bedat3.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9090),
                            Price = 1119.99,
                            ProductName = "Bedat",
                            ShortDescription = "No 3 Silver Dial Stainless Steel "
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9091),
                            GenderId = 2,
                            ImageRoute = "../images/HomePage/bertha-f/bertha1.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9091),
                            Price = 139.99000000000001,
                            ProductName = "Bertha",
                            ShortDescription = "Dolly Quartz Silver Dial Ladies Watch"
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9093),
                            GenderId = 2,
                            ImageRoute = "../images/HomePage/bertha-f/bertha2.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9093),
                            Price = 119.98999999999999,
                            ProductName = "Bertha",
                            ShortDescription = "Cecelia Crystal Green Dial Green "
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9094),
                            GenderId = 2,
                            ImageRoute = "../images/HomePage/bertha-f/bertha3.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9094),
                            Price = 249.99000000000001,
                            ProductName = "Bertha",
                            ShortDescription = "Cecelia Crystal Green Dial Green "
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9095),
                            GenderId = 2,
                            ImageRoute = "../images/HomePage/bertha-f/bertha4.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9095),
                            Price = 179.99000000000001,
                            ProductName = "Bertha",
                            ShortDescription = "Dixie Quartz Crystal Silver "
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9096),
                            GenderId = 2,
                            ImageRoute = "../images/HomePage/eterna-f/eterna1.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9096),
                            Price = 174.99000000000001,
                            ProductName = "Eterna",
                            ShortDescription = "Eternity Quartz Diamond White Dial Ladies"
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9098),
                            GenderId = 2,
                            ImageRoute = "../images/HomePage/eterna-f/eterna2.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9098),
                            Price = 209.99000000000001,
                            ProductName = "Eterna",
                            ShortDescription = "Eternity Quartz Diamond White Dial Ladies Watch"
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9099),
                            GenderId = 2,
                            ImageRoute = "../images/HomePage/eterna-f/eterna3.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9099),
                            Price = 1349.99,
                            ProductName = "Eterna",
                            ShortDescription = "Grace Open Art Automatic Mother "
                        },
                        new
                        {
                            Id = 31,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9100),
                            GenderId = 2,
                            ImageRoute = "../images/HomePage/eterna-f/eterna4.jpg",
                            ModifedAt = new DateTime(2021, 4, 6, 13, 56, 7, 193, DateTimeKind.Utc).AddTicks(9100),
                            Price = 174.99000000000001,
                            ProductName = "Eterna",
                            ShortDescription = "Eternity Quartz Diamond White Dial "
                        });
                });

            modelBuilder.Entity("e_comm.DB.Domain.Token", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("e_comm.DB.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillingDetailsId")
                        .HasColumnType("int");

                    b.Property<int?>("ChangePasswordId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TokenId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BillingDetailsId")
                        .IsUnique()
                        .HasFilter("[BillingDetailsId] IS NOT NULL");

                    b.HasIndex("ChangePasswordId")
                        .IsUnique()
                        .HasFilter("[ChangePasswordId] IS NOT NULL");

                    b.HasIndex("GenderId");

                    b.HasIndex("TokenId")
                        .IsUnique()
                        .HasFilter("[TokenId] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("e_comm.DB.Domain.Category", b =>
                {
                    b.HasOne("e_comm.DB.Domain.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("e_comm.DB.Domain.Payment", b =>
                {
                    b.HasOne("e_comm.DB.Domain.Product", "Product")
                        .WithMany("Payments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("e_comm.DB.Domain.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("e_comm.DB.Domain.Product", b =>
                {
                    b.HasOne("e_comm.DB.Domain.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("e_comm.DB.Domain.Gender", "Gender")
                        .WithMany("Products")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("e_comm.DB.Domain.User", b =>
                {
                    b.HasOne("e_comm.DB.Domain.BillingDetails", "BillingDetails")
                        .WithOne("User")
                        .HasForeignKey("e_comm.DB.Domain.User", "BillingDetailsId");

                    b.HasOne("e_comm.DB.Domain.ChangePasswordCode", "ChangePassword")
                        .WithOne("User")
                        .HasForeignKey("e_comm.DB.Domain.User", "ChangePasswordId");

                    b.HasOne("e_comm.DB.Domain.Gender", "Gender")
                        .WithMany("Users")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("e_comm.DB.Domain.Token", "Token")
                        .WithOne("User")
                        .HasForeignKey("e_comm.DB.Domain.User", "TokenId");

                    b.Navigation("BillingDetails");

                    b.Navigation("ChangePassword");

                    b.Navigation("Gender");

                    b.Navigation("Token");
                });

            modelBuilder.Entity("e_comm.DB.Domain.BillingDetails", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("e_comm.DB.Domain.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("e_comm.DB.Domain.ChangePasswordCode", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("e_comm.DB.Domain.Gender", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("e_comm.DB.Domain.Product", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("e_comm.DB.Domain.Token", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("e_comm.DB.Domain.User", b =>
                {
                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
